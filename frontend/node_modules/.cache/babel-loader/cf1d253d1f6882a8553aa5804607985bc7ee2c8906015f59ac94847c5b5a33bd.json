{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"D:\\\\Code\\\\inventory-management3\\\\frontend\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport function useAuth() {\n  _s();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      const token = localStorage.getItem(\"token\");\n      if (token) {\n        try {\n          // Verify token with backend\n          const response = await fetch(\"http://localhost:5000/api/auth/verify\", {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (response.ok) {\n            const userData = await response.json();\n            setIsAuthenticated(true);\n            setUser(userData.user);\n          } else {\n            // Token is invalid, remove it\n            localStorage.removeItem(\"token\");\n            setIsAuthenticated(false);\n            setUser(null);\n          }\n        } catch (error) {\n          console.error(\"Token verification error:\", error);\n          // On error, assume token is valid for offline functionality\n          setIsAuthenticated(true);\n        }\n      }\n    };\n    checkAuthStatus();\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        localStorage.setItem(\"token\", data.token);\n        setIsAuthenticated(true);\n        setUser(data.user);\n        return true;\n      }\n      return false;\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      return false;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setIsAuthenticated(false);\n    setUser(null);\n  };\n  const value = {\n    isAuthenticated,\n    user,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 10\n  }, this);\n}\n_s2(AuthProvider, \"Cix+uXOU60jwVTrRl9ss+REDA3M=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","undefined","useAuth","context","Error","AuthProvider","children","isAuthenticated","setIsAuthenticated","user","setUser","checkAuthStatus","token","localStorage","getItem","response","fetch","headers","Authorization","ok","userData","json","removeItem","error","console","login","username","password","method","body","JSON","stringify","data","setItem","logout","value","Provider","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Code/inventory-management3/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\nimport { createContext, useContext, useState, useEffect } from \"react\"\n\ninterface AuthContextType {\n  isAuthenticated: boolean\n  user: any\n  login: (username: string, password: string) => Promise<boolean>\n  logout: () => void\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\n\nexport function useAuth() {\n  const context = useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\")\n  }\n  return context\n}\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      const token = localStorage.getItem(\"token\")\n      if (token) {\n        try {\n          // Verify token with backend\n          const response = await fetch(\"http://localhost:5000/api/auth/verify\", {\n            headers: {\n              Authorization: `Bearer ${token}`,\n            },\n          })\n\n          if (response.ok) {\n            const userData = await response.json()\n            setIsAuthenticated(true)\n            setUser(userData.user)\n          } else {\n            // Token is invalid, remove it\n            localStorage.removeItem(\"token\")\n            setIsAuthenticated(false)\n            setUser(null)\n          }\n        } catch (error) {\n          console.error(\"Token verification error:\", error)\n          // On error, assume token is valid for offline functionality\n          setIsAuthenticated(true)\n        }\n      }\n    }\n\n    checkAuthStatus()\n  }, [])\n\n  const login = async (username: string, password: string): Promise<boolean> => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ username, password }),\n      })\n\n      if (response.ok) {\n        const data = await response.json()\n        localStorage.setItem(\"token\", data.token)\n        setIsAuthenticated(true)\n        setUser(data.user)\n        return true\n      }\n      return false\n    } catch (error) {\n      console.error(\"Login error:\", error)\n      return false\n    }\n  }\n\n  const logout = () => {\n    localStorage.removeItem(\"token\")\n    setIsAuthenticated(false)\n    setUser(null)\n  }\n\n  const value = {\n    isAuthenticated,\n    user,\n    login,\n    logout,\n  }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}