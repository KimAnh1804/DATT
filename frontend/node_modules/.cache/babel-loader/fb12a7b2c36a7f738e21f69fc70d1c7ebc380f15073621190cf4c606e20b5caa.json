{"ast":null,"code":"\"use client\";import{createContext,useContext,useState,useEffect}from\"react\";// Định nghĩa interface cho User\nimport{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export function useAuth(){const context=useContext(AuthContext);if(context===undefined){throw new Error(\"useAuth must be used within an AuthProvider\");}return context;}export function AuthProvider(_ref){let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(false);const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);// Khởi tạo loading là true\nuseEffect(()=>{const checkAuthStatus=async()=>{setLoading(true);// Bắt đầu kiểm tra, đặt loading là true\nconst token=localStorage.getItem(\"token\");if(token){try{const payload=JSON.parse(atob(token.split(\".\")[1]));const currentTime=Date.now()/1000;if(payload.exp>currentTime){setIsAuthenticated(true);setUser({username:payload.username,id:payload.userId,role:payload.role||\"user\"});try{const response=await fetch(\"http://localhost:5000/api/auth/verify\",{headers:{Authorization:`Bearer ${token}`}});if(response.ok){const userData=await response.json();setUser(userData.user);}else{console.log(\"Server verification failed, token might be invalid or expired on server.\");localStorage.removeItem(\"token\");setIsAuthenticated(false);setUser(null);}}catch(error){console.log(\"Server verification failed, but token is valid client-side:\",error);// Nếu server không phản hồi, vẫn giữ trạng thái đăng nhập nếu token client-side hợp lệ\n}}else{console.log(\"Token expired client-side.\");localStorage.removeItem(\"token\");setIsAuthenticated(false);setUser(null);}}catch(error){console.error(\"Invalid token format:\",error);localStorage.removeItem(\"token\");setIsAuthenticated(false);setUser(null);}}setLoading(false);// Kết thúc kiểm tra, đặt loading là false\n};checkAuthStatus();},[]);const login=async(username,password)=>{try{const response=await fetch(\"http://localhost:5000/api/auth/login\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({username,password})});if(response.ok){const data=await response.json();localStorage.setItem(\"token\",data.token);setIsAuthenticated(true);setUser(data.user);return true;}return false;}catch(error){console.error(\"Login error:\",error);return false;}};const logout=()=>{localStorage.removeItem(\"token\");setIsAuthenticated(false);setUser(null);};const value={isAuthenticated,user,loading,// Cung cấp trạng thái loading\nlogin,logout};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});}","map":{"version":3,"names":["createContext","useContext","useState","useEffect","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","checkAuthStatus","token","localStorage","getItem","payload","JSON","parse","atob","split","currentTime","Date","now","exp","username","id","userId","role","response","fetch","headers","Authorization","ok","userData","json","console","log","removeItem","error","login","password","method","body","stringify","data","setItem","logout","value","Provider"],"sources":["D:/DU LIEU O D/Code/inventory-management3/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\nimport { createContext, useContext, useState, useEffect } from \"react\"\n\n// Định nghĩa interface cho User\ninterface User {\n  id: string\n  username: string\n  role: string\n}\n\ninterface AuthContextType {\n  isAuthenticated: boolean\n  user: User | null\n  loading: boolean // Thêm trạng thái loading\n  login: (username: string, password: string) => Promise<boolean>\n  logout: () => void\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\n\nexport function useAuth() {\n  const context = useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\")\n  }\n  return context\n}\n\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const [user, setUser] = useState<User | null>(null)\n  const [loading, setLoading] = useState(true) // Khởi tạo loading là true\n\n  useEffect(() => {\n    const checkAuthStatus = async () => {\n      setLoading(true) // Bắt đầu kiểm tra, đặt loading là true\n      const token = localStorage.getItem(\"token\")\n      if (token) {\n        try {\n          const payload = JSON.parse(atob(token.split(\".\")[1]))\n          const currentTime = Date.now() / 1000\n\n          if (payload.exp > currentTime) {\n            setIsAuthenticated(true)\n            setUser({ username: payload.username, id: payload.userId, role: payload.role || \"user\" })\n\n            try {\n              const response = await fetch(\"http://localhost:5000/api/auth/verify\", {\n                headers: {\n                  Authorization: `Bearer ${token}`,\n                },\n              })\n\n              if (response.ok) {\n                const userData = await response.json()\n                setUser(userData.user)\n              } else {\n                console.log(\"Server verification failed, token might be invalid or expired on server.\")\n                localStorage.removeItem(\"token\")\n                setIsAuthenticated(false)\n                setUser(null)\n              }\n            } catch (error) {\n              console.log(\"Server verification failed, but token is valid client-side:\", error)\n              // Nếu server không phản hồi, vẫn giữ trạng thái đăng nhập nếu token client-side hợp lệ\n            }\n          } else {\n            console.log(\"Token expired client-side.\")\n            localStorage.removeItem(\"token\")\n            setIsAuthenticated(false)\n            setUser(null)\n          }\n        } catch (error) {\n          console.error(\"Invalid token format:\", error)\n          localStorage.removeItem(\"token\")\n          setIsAuthenticated(false)\n          setUser(null)\n        }\n      }\n      setLoading(false) // Kết thúc kiểm tra, đặt loading là false\n    }\n\n    checkAuthStatus()\n  }, [])\n\n  const login = async (username: string, password: string): Promise<boolean> => {\n    try {\n      const response = await fetch(\"http://localhost:5000/api/auth/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ username, password }),\n      })\n\n      if (response.ok) {\n        const data = await response.json()\n        localStorage.setItem(\"token\", data.token)\n        setIsAuthenticated(true)\n        setUser(data.user)\n        return true\n      }\n      return false\n    } catch (error) {\n      console.error(\"Login error:\", error)\n      return false\n    }\n  }\n\n  const logout = () => {\n    localStorage.removeItem(\"token\")\n    setIsAuthenticated(false)\n    setUser(null)\n  }\n\n  const value = {\n    isAuthenticated,\n    user,\n    loading, // Cung cấp trạng thái loading\n    login,\n    logout,\n  }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}